package com.revature.servlets;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;
import java.io.PrintWriter;

import com.revature.service.dao.OrderServiceImpl;
import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;
import java.io.PrintWriter;

@WebServlet("/OrderServlet")
public class OrderServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        HttpSession session = request.getSession();
        String userName = (String) session.getAttribute("username");
        String password = (String) session.getAttribute("password");

        if (userName == null || password == null) {
            response.sendRedirect("login.jsp?message=Session Expired, Login Again!!");
            return; // Ensure the response is terminated after redirection
        }

        // Retrieve the amount parameter safely
        String amountParam = request.getParameter("amount");
        double paidAmount = 0;

        try {
            if (amountParam != null) {
                paidAmount = Double.parseDouble(amountParam.trim());
            } else {
                throw new NumberFormatException("Amount parameter is missing");
            }
        } catch (NumberFormatException e) {
            // Handle the case where the amount is not a valid number or is missing
            response.sendRedirect("orderDetails.jsp?message=Invalid amount provided, please try again.");
            return; // Terminate after redirection to prevent further processing
        }

        // Assuming OrderServiceImpl handles payment and returns status
        String status = new OrderServiceImpl().paymentSuccess(userName, paidAmount);

        response.setContentType("text/html");
        PrintWriter pw = response.getWriter();

        RequestDispatcher rd = request.getRequestDispatcher("orderDetails.jsp");
        rd.include(request, response);

        pw.println("<script>document.getElementById('message').innerHTML='" + status + "'</script>");
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        doGet(request, response);
    }
}


